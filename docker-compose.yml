version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: songcraft-postgres
    environment:
      POSTGRES_DB: songcraft
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache and Task Queue
  redis:
    image: redis:7-alpine
    container_name: songcraft-redis
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: songcraft-minio
    profiles:
      - local
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: .
    container_name: songcraft-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/songcraft
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin123}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-songcraft-files}
      - MINIO_SECURE=${MINIO_SECURE:-false}
      - SECRET_KEY=dev-super-secret-key-change-in-production-12345
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-sk-your-deepseek-api-key-here}
      - SUNO_API_KEY=${SUNO_API_KEY:-your-suno-api-key-here}
      - DODO_PAYMENTS_API_KEY=${DODO_PAYMENTS_API_KEY:-your-dodo-payments-api-key}
      - DODO_PAYMENTS_WEBHOOK_SECRET=${DODO_PAYMENTS_WEBHOOK_SECRET:-your-dodo-payments-webhook-secret}
      - DODO_PAYMENTS_API_URL=${DODO_PAYMENTS_API_URL:-https://api.dodopayments.com/v1}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-your-email@gmail.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-your-email-password}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@songcraft.app}
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build: .
    container_name: songcraft-celery-worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/songcraft
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin123}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-songcraft-files}
      - MINIO_SECURE=${MINIO_SECURE:-false}
      - SECRET_KEY=dev-super-secret-key-change-in-production-12345
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-sk-your-deepseek-api-key-here}
      - SUNO_API_KEY=${SUNO_API_KEY:-your-suno-api-key-here}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-your-email@gmail.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-your-email-password}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@songcraft.app}
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app

  # Celery Beat Scheduler
  celery-beat:
    build: .
    container_name: songcraft-celery-beat
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/songcraft
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-super-secret-key-change-in-production-12345
    command: celery -A app.celery_app beat --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app

  # Flower (Celery Monitoring) - Development only
  flower:
    build: .
    container_name: songcraft-flower
    environment:
      - REDIS_URL=redis://redis:6379
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: songcraft-network 