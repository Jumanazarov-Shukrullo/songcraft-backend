"""DDD migration - main models

Revision ID: 18fe05047862
Revises: 
Create Date: 2025-07-02 03:31:03.701122

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '18fe05047862'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('audit_logs', 'details',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.String(),
               existing_nullable=True)
    op.add_column('orders', sa.Column('lemon_squeezy_order_id', sa.String(), nullable=True))
    op.add_column('orders', sa.Column('lemon_squeezy_payment_id', sa.String(), nullable=True))
    op.alter_column('orders', 'currency',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PAID', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='orderstatus'),
               nullable=False)
    op.drop_constraint('orders_stripe_payment_intent_id_key', 'orders', type_='unique')
    op.create_unique_constraint(None, 'orders', ['lemon_squeezy_order_id'])
    op.create_unique_constraint(None, 'orders', ['lemon_squeezy_payment_id'])
    op.drop_column('orders', 'stripe_payment_intent_id')
    op.add_column('song_images', sa.Column('file_url', sa.String(), nullable=False))
    op.drop_column('song_images', 'mime_type')
    op.drop_column('song_images', 'original_filename')
    op.drop_column('song_images', 'file_path')
    op.drop_column('song_images', 'file_size')
    op.alter_column('songs', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('songs', 'video_generated')
    op.drop_column('songs', 'tone')
    op.drop_column('songs', 'updated_at')
    op.drop_column('songs', 'title')
    op.drop_column('songs', 'file_size_video')
    op.drop_column('songs', 'lyrics_generated')
    op.drop_column('songs', 'recipient_description')
    op.drop_column('songs', 'audio_generated')
    op.drop_column('songs', 'file_size_audio')
    op.drop_column('songs', 'occasion_description')
    op.alter_column('task_results', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('task_results', 'error_message',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'INACTIVE', 'PENDING_VERIFICATION', name='userstatus'),
               nullable=False)
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'INACTIVE', 'PENDING_VERIFICATION', name='userstatus'),
               nullable=True)
    op.alter_column('task_results', 'error_message',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('task_results', 'result',
               existing_type=sa.String(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.add_column('songs', sa.Column('occasion_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('file_size_audio', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('audio_generated', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('recipient_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('lyrics_generated', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('file_size_video', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('tone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('songs', sa.Column('video_generated', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.alter_column('songs', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.add_column('song_images', sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('song_images', sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('song_images', sa.Column('original_filename', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('song_images', sa.Column('mime_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('song_images', 'file_url')
    op.add_column('orders', sa.Column('stripe_payment_intent_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='unique')
    op.drop_constraint(None, 'orders', type_='unique')
    op.create_unique_constraint('orders_stripe_payment_intent_id_key', 'orders', ['stripe_payment_intent_id'])
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('PENDING', 'PAID', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='orderstatus'),
               nullable=True)
    op.alter_column('orders', 'currency',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('orders', 'lemon_squeezy_payment_id')
    op.drop_column('orders', 'lemon_squeezy_order_id')
    op.alter_column('audit_logs', 'details',
               existing_type=sa.String(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###
